-- Generated by isa.py, do not edit.

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package isa_defs is

	-- Op Code Groups
	constant GRP_MISC : std_logic_vector(2 downto 0) := "000";
	constant GRP_UNSD1 : std_logic_vector(2 downto 0) := "001";
	constant GRP_UNSD2 : std_logic_vector(2 downto 0) := "010";
	constant GRP_JMP  : std_logic_vector(2 downto 0) := "011";
	constant GRP_ALU  : std_logic_vector(2 downto 0) := "100";
	constant GRP_FLGS : std_logic_vector(2 downto 0) := "101";
	constant GRP_MEM  : std_logic_vector(2 downto 0) := "110";
	constant GRP_BOOL : std_logic_vector(2 downto 0) := "111";

	-- Op Codes
	constant OP_NOP   : std_logic_vector(7 downto 0) := "00000000"; -- 0x00
	constant OP_OUT   : std_logic_vector(7 downto 0) := "00000011"; -- 0x03
	constant OP_IN    : std_logic_vector(7 downto 0) := "00000101"; -- 0x05
	constant OP_CALL  : std_logic_vector(7 downto 0) := "00000110"; -- 0x06
	constant OP_CALLI : std_logic_vector(7 downto 0) := "00000111"; -- 0x07
	constant OP_RET   : std_logic_vector(7 downto 0) := "00001000"; -- 0x08
	constant OP_RETI  : std_logic_vector(7 downto 0) := "00001010"; -- 0x0A
	constant OP_PUSH  : std_logic_vector(7 downto 0) := "00001100"; -- 0x0C
	constant OP_POP   : std_logic_vector(7 downto 0) := "00001110"; -- 0x0E
	constant OP_MUL   : std_logic_vector(7 downto 0) := "00010000"; -- 0x10
	constant OP_MULI  : std_logic_vector(7 downto 0) := "00010001"; -- 0x11
	constant OP_SMUL  : std_logic_vector(7 downto 0) := "00010010"; -- 0x12
	constant OP_SMULI : std_logic_vector(7 downto 0) := "00010011"; -- 0x13
	constant OP_J     : std_logic_vector(7 downto 0) := "01100000"; -- 0x60
	constant OP_JI    : std_logic_vector(7 downto 0) := "01100001"; -- 0x61
	constant OP_JEQ   : std_logic_vector(7 downto 0) := "01100010"; -- 0x62
	constant OP_JEQI  : std_logic_vector(7 downto 0) := "01100011"; -- 0x63
	constant OP_JCS   : std_logic_vector(7 downto 0) := "01100100"; -- 0x64
	constant OP_JCSI  : std_logic_vector(7 downto 0) := "01100101"; -- 0x65
	constant OP_JNEG  : std_logic_vector(7 downto 0) := "01100110"; -- 0x66
	constant OP_JNEGI : std_logic_vector(7 downto 0) := "01100111"; -- 0x67
	constant OP_JVS   : std_logic_vector(7 downto 0) := "01101000"; -- 0x68
	constant OP_JVSI  : std_logic_vector(7 downto 0) := "01101001"; -- 0x69
	constant OP_JHI   : std_logic_vector(7 downto 0) := "01101010"; -- 0x6A
	constant OP_JHII  : std_logic_vector(7 downto 0) := "01101011"; -- 0x6B
	constant OP_JGE   : std_logic_vector(7 downto 0) := "01101100"; -- 0x6C
	constant OP_JGEI  : std_logic_vector(7 downto 0) := "01101101"; -- 0x6D
	constant OP_JGT   : std_logic_vector(7 downto 0) := "01101110"; -- 0x6E
	constant OP_JGTI  : std_logic_vector(7 downto 0) := "01101111"; -- 0x6F
	constant OP_JNE   : std_logic_vector(7 downto 0) := "01110010"; -- 0x72
	constant OP_JNEI  : std_logic_vector(7 downto 0) := "01110011"; -- 0x73
	constant OP_JCC   : std_logic_vector(7 downto 0) := "01110100"; -- 0x74
	constant OP_JCCI  : std_logic_vector(7 downto 0) := "01110101"; -- 0x75
	constant OP_JPOS  : std_logic_vector(7 downto 0) := "01110110"; -- 0x76
	constant OP_JPOSI : std_logic_vector(7 downto 0) := "01110111"; -- 0x77
	constant OP_JVC   : std_logic_vector(7 downto 0) := "01111000"; -- 0x78
	constant OP_JVCI  : std_logic_vector(7 downto 0) := "01111001"; -- 0x79
	constant OP_JLS   : std_logic_vector(7 downto 0) := "01111010"; -- 0x7A
	constant OP_JLSI  : std_logic_vector(7 downto 0) := "01111011"; -- 0x7B
	constant OP_JLT   : std_logic_vector(7 downto 0) := "01111100"; -- 0x7C
	constant OP_JLTI  : std_logic_vector(7 downto 0) := "01111101"; -- 0x7D
	constant OP_JLE   : std_logic_vector(7 downto 0) := "01111110"; -- 0x7E
	constant OP_JLEI  : std_logic_vector(7 downto 0) := "01111111"; -- 0x7F
	constant OP_SUB   : std_logic_vector(7 downto 0) := "10000000"; -- 0x80
	constant OP_SUBI  : std_logic_vector(7 downto 0) := "10000001"; -- 0x81
	constant OP_SUBC  : std_logic_vector(7 downto 0) := "10000010"; -- 0x82
	constant OP_SUBCI : std_logic_vector(7 downto 0) := "10000011"; -- 0x83
	constant OP_ADD   : std_logic_vector(7 downto 0) := "10000100"; -- 0x84
	constant OP_ADDI  : std_logic_vector(7 downto 0) := "10000101"; -- 0x85
	constant OP_ADDC  : std_logic_vector(7 downto 0) := "10000110"; -- 0x86
	constant OP_ADDCI : std_logic_vector(7 downto 0) := "10000111"; -- 0x87
	constant OP_CMP   : std_logic_vector(7 downto 0) := "10010000"; -- 0x90
	constant OP_CMPI  : std_logic_vector(7 downto 0) := "10010001"; -- 0x91
	constant OP_SET   : std_logic_vector(7 downto 0) := "10100000"; -- 0xA0
	constant OP_CLR   : std_logic_vector(7 downto 0) := "10100010"; -- 0xA2
	constant OP_HLT   : std_logic_vector(7 downto 0) := "10100100"; -- 0xA4
	constant OP_INT   : std_logic_vector(7 downto 0) := "10100111"; -- 0xA7
	constant OP_TST   : std_logic_vector(7 downto 0) := "10101001"; -- 0xA9
	constant OP_MOV   : std_logic_vector(7 downto 0) := "10101010"; -- 0xAA
	constant OP_MOVI  : std_logic_vector(7 downto 0) := "10101011"; -- 0xAB
	constant OP_LDR   : std_logic_vector(7 downto 0) := "11000000"; -- 0xC0
	constant OP_LDRI  : std_logic_vector(7 downto 0) := "11000001"; -- 0xC1
	constant OP_STR   : std_logic_vector(7 downto 0) := "11000010"; -- 0xC2
	constant OP_STRI  : std_logic_vector(7 downto 0) := "11000011"; -- 0xC3
	constant OP_LDRB  : std_logic_vector(7 downto 0) := "11000100"; -- 0xC4
	constant OP_LDRBI : std_logic_vector(7 downto 0) := "11000101"; -- 0xC5
	constant OP_STRB  : std_logic_vector(7 downto 0) := "11000110"; -- 0xC6
	constant OP_STRBI : std_logic_vector(7 downto 0) := "11000111"; -- 0xC7
	constant OP_LDA   : std_logic_vector(7 downto 0) := "11001000"; -- 0xC8
	constant OP_STA   : std_logic_vector(7 downto 0) := "11001010"; -- 0xCA
	constant OP_LDAB  : std_logic_vector(7 downto 0) := "11001100"; -- 0xCC
	constant OP_STAB  : std_logic_vector(7 downto 0) := "11001110"; -- 0xCE
	constant OP_AND   : std_logic_vector(7 downto 0) := "11100000"; -- 0xE0
	constant OP_ANDI  : std_logic_vector(7 downto 0) := "11100001"; -- 0xE1
	constant OP_OR    : std_logic_vector(7 downto 0) := "11100010"; -- 0xE2
	constant OP_ORI   : std_logic_vector(7 downto 0) := "11100011"; -- 0xE3
	constant OP_XOR   : std_logic_vector(7 downto 0) := "11100100"; -- 0xE4
	constant OP_XORI  : std_logic_vector(7 downto 0) := "11100101"; -- 0xE5
	constant OP_LSL   : std_logic_vector(7 downto 0) := "11100110"; -- 0xE6
	constant OP_LSLI  : std_logic_vector(7 downto 0) := "11100111"; -- 0xE7
	constant OP_LSR   : std_logic_vector(7 downto 0) := "11101000"; -- 0xE8
	constant OP_LSRI  : std_logic_vector(7 downto 0) := "11101001"; -- 0xE9
	constant OP_ASL   : std_logic_vector(7 downto 0) := "11101010"; -- 0xEA
	constant OP_ASLI  : std_logic_vector(7 downto 0) := "11101011"; -- 0xEB
	constant OP_ASR   : std_logic_vector(7 downto 0) := "11101100"; -- 0xEC
	constant OP_ASRI  : std_logic_vector(7 downto 0) := "11101101"; -- 0xED
	constant OP_NOT   : std_logic_vector(7 downto 0) := "11101110"; -- 0xEE
	constant OP_NOTI  : std_logic_vector(7 downto 0) := "11101111"; -- 0xEF

	-- Short Codes
	constant SC_NOP   : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_OUT   : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_IN    : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_CALL  : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_CALLI : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_RET   : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_RETI  : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_PUSH  : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_POP   : std_logic_vector(3 downto 0) := "0111"; -- 0x07
	constant SC_MUL   : std_logic_vector(3 downto 0) := "1000"; -- 0x08
	constant SC_MULI  : std_logic_vector(3 downto 0) := "1000"; -- 0x08
	constant SC_SMUL  : std_logic_vector(3 downto 0) := "1001"; -- 0x09
	constant SC_SMULI : std_logic_vector(3 downto 0) := "1001"; -- 0x09
	constant SC_J     : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_JI    : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_JEQ   : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_JEQI  : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_JCS   : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_JCSI  : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_JNEG  : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_JNEGI : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_JVS   : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_JVSI  : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_JHI   : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_JHII  : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_JGE   : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_JGEI  : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_JGT   : std_logic_vector(3 downto 0) := "0111"; -- 0x07
	constant SC_JGTI  : std_logic_vector(3 downto 0) := "0111"; -- 0x07
	constant SC_JNE   : std_logic_vector(3 downto 0) := "1001"; -- 0x09
	constant SC_JNEI  : std_logic_vector(3 downto 0) := "1001"; -- 0x09
	constant SC_JCC   : std_logic_vector(3 downto 0) := "1010"; -- 0x0A
	constant SC_JCCI  : std_logic_vector(3 downto 0) := "1010"; -- 0x0A
	constant SC_JPOS  : std_logic_vector(3 downto 0) := "1011"; -- 0x0B
	constant SC_JPOSI : std_logic_vector(3 downto 0) := "1011"; -- 0x0B
	constant SC_JVC   : std_logic_vector(3 downto 0) := "1100"; -- 0x0C
	constant SC_JVCI  : std_logic_vector(3 downto 0) := "1100"; -- 0x0C
	constant SC_JLS   : std_logic_vector(3 downto 0) := "1101"; -- 0x0D
	constant SC_JLSI  : std_logic_vector(3 downto 0) := "1101"; -- 0x0D
	constant SC_JLT   : std_logic_vector(3 downto 0) := "1110"; -- 0x0E
	constant SC_JLTI  : std_logic_vector(3 downto 0) := "1110"; -- 0x0E
	constant SC_JLE   : std_logic_vector(3 downto 0) := "1111"; -- 0x0F
	constant SC_JLEI  : std_logic_vector(3 downto 0) := "1111"; -- 0x0F
	constant SC_SUB   : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_SUBI  : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_SUBC  : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_SUBCI : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_ADD   : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_ADDI  : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_ADDC  : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_ADDCI : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_CMP   : std_logic_vector(3 downto 0) := "1000"; -- 0x08
	constant SC_CMPI  : std_logic_vector(3 downto 0) := "1000"; -- 0x08
	constant SC_SET   : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_CLR   : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_HLT   : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_INT   : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_TST   : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_MOV   : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_MOVI  : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_LDR   : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_LDRI  : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_STR   : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_STRI  : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_LDRB  : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_LDRBI : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_STRB  : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_STRBI : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_LDA   : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_STA   : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_LDAB  : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_STAB  : std_logic_vector(3 downto 0) := "0111"; -- 0x07
	constant SC_AND   : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_ANDI  : std_logic_vector(3 downto 0) := "0000"; -- 0x00
	constant SC_OR    : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_ORI   : std_logic_vector(3 downto 0) := "0001"; -- 0x01
	constant SC_XOR   : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_XORI  : std_logic_vector(3 downto 0) := "0010"; -- 0x02
	constant SC_LSL   : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_LSLI  : std_logic_vector(3 downto 0) := "0011"; -- 0x03
	constant SC_LSR   : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_LSRI  : std_logic_vector(3 downto 0) := "0100"; -- 0x04
	constant SC_ASL   : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_ASLI  : std_logic_vector(3 downto 0) := "0101"; -- 0x05
	constant SC_ASR   : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_ASRI  : std_logic_vector(3 downto 0) := "0110"; -- 0x06
	constant SC_NOT   : std_logic_vector(3 downto 0) := "0111"; -- 0x07
	constant SC_NOTI  : std_logic_vector(3 downto 0) := "0111"; -- 0x07

	-- Status Register Flags
	constant Z_FLAG_POS : integer := 0;
	constant V_FLAG_POS : integer := 1;
	constant C_FLAG_POS : integer := 2;
	constant N_FLAG_POS : integer := 3;
	constant I_FLAG_POS : integer := 4;

	-- IRQ Flags
	constant IRQ_BUTTON0 : integer := 1;
	constant IRQ_BUTTON1 : integer := 2;
	constant IRQ_BUTTON2 : integer := 4;
	constant IRQ_BUTTON3 : integer := 8;
	constant IRQ_BUTTON4 : integer := 16;
	constant IRQ_BUTTON5 : integer := 32;
	constant IRQ_INT6 : integer := 64;
	constant IRQ_UART_RX : integer := 128;
	constant IRQ_KEYBOARD : integer := 256;
	constant IRQ_SD_CARD : integer := 512;
	constant IRQ_TIMER1 : integer := 1024;
	constant IRQ_TIMER2 : integer := 2048;

	-- Port Definitions
	constant PORT_STATUS_REG      : integer := 0;
	constant PORT_IRQ_CLEAR       : integer := 1;
	constant PORT_IRQ_MASK        : integer := 2;
	constant PORT_IRQ_READY       : integer := 3;
	constant PORT_LED             : integer := 5;
	constant PORT_SEVEN_SEG       : integer := 6;
	constant PORT_BUTTONS         : integer := 7;
	constant PORT_SWITCHES        : integer := 8;
	constant PORT_UART_FLAGS      : integer := 10;
	constant PORT_UART_TX_DATA    : integer := 11;
	constant PORT_UART_RX_DATA    : integer := 12;
	constant PORT_SD_FLAGS        : integer := 20;
	constant PORT_SD_COMMAND      : integer := 21;
	constant PORT_SD_ADDRESS      : integer := 22;
	constant PORT_SD_RX_DATA      : integer := 23;
	constant PORT_PS2_FLAGS       : integer := 30;
	constant PORT_PS2_RX_DATA     : integer := 31;
	constant PORT_PS2_TX_DATA     : integer := 32;
	constant PORT_TIMER1_TOP      : integer := 40;
	constant PORT_TIMER1_VALUE    : integer := 41;
	constant PORT_TIMER1_RESTART  : integer := 42;
	constant PORT_TIMER1_ENABLED  : integer := 43;
	constant PORT_TIMER2_TOP      : integer := 50;
	constant PORT_TIMER2_VALUE    : integer := 51;
	constant PORT_TIMER2_RESTART  : integer := 52;
	constant PORT_TIMER2_ENABLED  : integer := 53;

	-- Debug Port Definitions
	constant DBG_HALTED               : std_logic_vector(6 downto 0) := "0010000"; -- 0x10
	constant DBG_RUNNING              : std_logic_vector(6 downto 0) := "0010001"; -- 0x11
	constant DBG_STATUS               : std_logic_vector(6 downto 0) := "0010010"; -- 0x12
	constant DBG_HALT                 : std_logic_vector(6 downto 0) := "0010011"; -- 0x13
	constant DBG_CONTINUE             : std_logic_vector(6 downto 0) := "0010100"; -- 0x14
	constant DBG_STEP                 : std_logic_vector(6 downto 0) := "0010101"; -- 0x15
	constant DBG_RESET                : std_logic_vector(6 downto 0) := "0010110"; -- 0x16
	constant DBG_GET_CPU_FLAGS        : std_logic_vector(6 downto 0) := "0101111"; -- 0x2f
	constant DBG_GET_REG_0            : std_logic_vector(6 downto 0) := "0110000"; -- 0x30
	constant DBG_GET_REG_1            : std_logic_vector(6 downto 0) := "0110001"; -- 0x31
	constant DBG_GET_REG_2            : std_logic_vector(6 downto 0) := "0110010"; -- 0x32
	constant DBG_GET_REG_3            : std_logic_vector(6 downto 0) := "0110011"; -- 0x33
	constant DBG_GET_REG_4            : std_logic_vector(6 downto 0) := "0110100"; -- 0x34
	constant DBG_GET_REG_5            : std_logic_vector(6 downto 0) := "0110101"; -- 0x35
	constant DBG_GET_REG_6            : std_logic_vector(6 downto 0) := "0110110"; -- 0x36
	constant DBG_GET_REG_7            : std_logic_vector(6 downto 0) := "0110111"; -- 0x37
	constant DBG_GET_REG_8            : std_logic_vector(6 downto 0) := "0111000"; -- 0x38
	constant DBG_GET_REG_9            : std_logic_vector(6 downto 0) := "0111001"; -- 0x39
	constant DBG_GET_REG_10           : std_logic_vector(6 downto 0) := "0111010"; -- 0x3a
	constant DBG_GET_REG_11           : std_logic_vector(6 downto 0) := "0111011"; -- 0x3b
	constant DBG_GET_REG_12           : std_logic_vector(6 downto 0) := "0111100"; -- 0x3c
	constant DBG_GET_REG_13           : std_logic_vector(6 downto 0) := "0111101"; -- 0x3d
	constant DBG_GET_REG_14           : std_logic_vector(6 downto 0) := "0111110"; -- 0x3e
	constant DBG_GET_REG_15           : std_logic_vector(6 downto 0) := "0111111"; -- 0x3f
	constant DBG_GET_MEM              : std_logic_vector(6 downto 0) := "1000000"; -- 0x40
	constant DBG_SET_MEM              : std_logic_vector(6 downto 0) := "1000001"; -- 0x41
	constant DBG_RUNNING_CPU_ID       : std_logic_vector(31 downto 0) := "01000011001101110011010000110000"; -- 0x43373430
	constant DBG_HALTED_CPU_ID        : std_logic_vector(31 downto 0) := "11000011001101110011010000110000"; -- 0xc3373430

end isa_defs;
